<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
  	xmlns:jaxws="http://cxf.apache.org/jaxws"
  	xmlns:util="http://www.springframework.org/schema/util"
  	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://cxf.apache.org/jaxrs
	http://cxf.apache.org/schemas/jaxrs.xsd
	http://cxf.apache.org/jaxws
	http://cxf.apache.org/schemas/jaxws.xsd">


	<import resource="classpath:META-INF/cxf/cxf.xml" />

	
	
	<!-- 
	 Apache cxf(2.5.2) doesnt support raw json objects like org.codehaus.jettison.JSONObject. for using json 
	 in requests and responses, i used pojos(simply getters and setters with JAXB annotations )
	 and apache cxf json provider i.e. org.apache.cxf.jaxrs.provider.json.JSONProvider. 
	 -->
	<bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider">
	<!-- 
		<property name="dropRootElement" value="true" />
		<property name="supportUnwrapped" value="true" />
	 -->
	</bean>
	
	<!-- JAX-RS -->
  	<jaxrs:server address="/rs/email">
   	  <jaxrs:serviceBeans>
      <ref bean="email" />
    </jaxrs:serviceBeans>
   
     <jaxrs:providers>
     	<ref bean="jsonProvider"/>
     </jaxrs:providers>
  
  	</jaxrs:server>




	<jaxws:endpoint 
	  implementor="#email" 
	  address="/ws/email" />
	  
	  <bean id="email" class="com.example.email.server.EmailService" />
	  
</beans>
